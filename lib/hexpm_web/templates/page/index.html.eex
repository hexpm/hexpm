<div class="featured-home">
  <%= render HexpmWeb.LayoutView, "_flash.html", conn: @conn %>

  <h2>The package manager for the Erlang ecosystem</h2>

  <div class="search-form">
    <div class="container">
      <div class="row">
        <div class="col-md-8 col-md-offset-2">
          <%= form_tag(Routes.package_path(Endpoint, :index), method: "get", role: "search") do %>
            <div class="input-group">
              <input type="search" class="form-control" placeholder="Find packages" name="search" id="search" value="<% # search(assigns) %>" tabindex="1">
              <input type="hidden" name="sort" value="recent_downloads">
              <label class="sr-only" for="search">Find packages</label>
              <span class="input-group-btn">
                <button type="submit" class="btn btn-search" tabindex="1">
                  <%= icon(:glyphicon, :search) %>
                  <span class="sr-only">Search</span>
                </button>
              </span>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <div class="using-with-boxes">
    <div class="using-with-box elixir">
      <div class="shadow"></div>
      <div class="text-content clearfix">
        <div class="side-box">
          <div class="lang-symbol"></div>
        </div>
        <div class="instructions">
          <h3><a href="<%= Routes.docs_path(Endpoint, :usage) %>">Using with Elixir</a></h3>
          <p>
            Specify your Mix dependencies as two-item tuples like <code>{:plug, "~> 1.1.0"}</code>
            in your dependency list, Elixir will ask if you want to install Hex if you haven't already.
          </p>
        </div>
      </div>
    </div>

    <div class="using-with-box erlang">
      <div class="shadow"></div>
      <div class="text-content clearfix">
        <div class="side-box">
          <div class="lang-symbol"></div>
        </div>
        <div class="instructions">
          <h3><a href="<%= Routes.docs_path(Endpoint, :rebar3_usage) %>">Using with Erlang</a></h3>
          <p>
            Download <a href="https://s3.amazonaws.com/rebar3/rebar3">rebar3</a>, put it in your <code>PATH</code> and give it executable permissions.
            Now you can specify Hex dependencies in your rebar.config like <code>{deps, [hackney]}</code>.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="getting-started">
  <div class="container">
    <div class="row">
      <div class="col-md-4">
        <h3 class="gs-head">
          <%= icon(:octicon, :"cloud-download", class: "header-icon") %>
          Getting started
        </h3>
        <p>
          Fetch dependencies from Hex without creating an account.
          Hex is usable out of the box in Elixir with <a href="<%= Routes.docs_path(@conn, :usage) %>">Mix</a>
          and in Erlang with <a href="<%= Routes.docs_path(@conn, :rebar3_usage) %>">Rebar3</a>.
          Check our <a href="<%= Routes.docs_path(@conn, :faq) %>">FAQ</a> for commonly asked questions.
        </p>
      </div>

      <div class="col-md-4">
        <h3 class="gs-head">
          <%= icon(:octicon, :"cloud-upload", class: "header-icon") %>
          Publish packages
        </h3>
        <p>
          <a href="<%= Routes.signup_path(@conn, :show) %>">Create an account</a> and follow the
          <a href="<%= Routes.docs_path(@conn, :publish) %>">publishing guide</a>. Your package
          will be immediately available to all Elixir and Erlang users and the documentation will
          be available on <a href="https://hexdocs.pm">HexDocs</a>.
        </p>
      </div>

      <div class="col-md-4">
        <h3 class="gs-head">
          <%= icon(:octicon, :lock, class: "header-icon") %>
          Private packages
        </h3>
        <p>
          Publish private packages by <a href="<%= Routes.organization_path(@conn, :new) %>">creating an organization</a>.
          Your private packages
          will get the same features as public packages such as fast dependency fetching, HexDocs,
          and run on the same reliable infrastructure that serves millions of packages
          daily. See our <a href="<%= Routes.page_path(@conn, :pricing) %>">pricing page</a> for more details.
        </p>
      </div>
    </div>
  </div>
</div>

<div class="stats home-stats">
  <ul class="container">
    <li>
      <%= icon(:octicon, :package, class: "stat-icon stat-icon-package") %>
      <span class="stat-info">
        <span class="count-info wrap">
          <%= ViewHelpers.human_number_space(@num_packages, 5) %>
        </span>
        <span class="count-info no-wrap">
          <%= ViewHelpers.human_number_space(@num_packages) %>
        </span>
        <br> packages <br> available
      </span>
    </li>
    <li>
      <%= icon(:octicon, :versions, class: "stat-icon stat-icon-versions") %>
      <span class="stat-info">
        <span class="count-info wrap">
          <%= ViewHelpers.human_number_space(@num_releases, 5) %>
        </span>
        <span class="count-info no-wrap">
          <%= ViewHelpers.human_number_space(@num_releases) %>
        </span>
        <br> package <br> versions
      </span>
    </li>
    <li>
      <%= icon(:octicon, :calendar, class: "stat-icon stat-icon-calendar") %>
      <span class="stat-info">
        <span class="count-info wrap">
          <%= ViewHelpers.human_number_space(@total["day"], 5) %>
        </span>
        <span class="count-info no-wrap">
          <%= ViewHelpers.human_number_space(@total["day"]) %>
        </span>
        <br> downloads <br> yesterday
      </span>
    </li>
    <li>
      <%= icon(:octicon, :calendar, class: "stat-icon stat-icon-calendar") %>
      <span class="stat-info">
        <span class="count-info wrap">
          <%= ViewHelpers.human_number_space(@total["week"], 5) %>
        </span>
        <span class="count-info no-wrap">
          <%= ViewHelpers.human_number_space(@total["week"]) %>
        </span>
        <br> downloads <br> last 7 days
      </span>
    </li>
    <li>
      <%= icon(:octicon, :calendar, class: "stat-icon stat-icon-calendar") %>
      <span class="stat-info">
        <span class="count-info wrap">
          <%= ViewHelpers.human_number_space(@total["all"], 5) %>
        </span>
        <span class="count-info no-wrap">
          <%= ViewHelpers.human_number_space(@total["all"]) %>
        </span>
        <br> downloads <br> all time
      </span>
    </li>
  </ul>
</div>

<div class="log-body">
  <div class="container">
    <div class="row">
      <div class="col-md-4">
        <h3 class="log-head">
          <%= icon(:octicon, :package, class: "header-icon") %>
          Most Downloaded
        </h3>
        <ul>
          <%= for {package, inserted_at, meta, downloads} <- @package_top do %>
            <%= render_package package: package, downloads: downloads, inserted_at: inserted_at, description: meta.description %>
          <% end %>
        </ul>
      </div>
      <div class="col-md-4">
        <h3 class="log-head">
          <%= icon(:octicon, :package, class: "header-icon") %>
          New Packages
        </h3>
        <ul>
          <%= for {package, inserted_at, %PackageMetadata{} = meta} <- @package_new do %>
            <%= render_package package: package, inserted_at: inserted_at, description: meta.description %>
          <% end %>
        </ul>
      </div>
      <div class="col-md-4">
        <h3 class="log-head">
          <%= icon(:octicon, :package, class: "header-icon") %>
          Recently Updated
        </h3>
        <ul>
          <%= for {package, version, inserted_at, %PackageMetadata{} = meta} <- @releases_new do %>
            <%= render_package version: version, package: package, inserted_at: inserted_at, description: meta.description %>
          <% end %>
        </ul>
      </div>
    </div>
  </div>
</div>
